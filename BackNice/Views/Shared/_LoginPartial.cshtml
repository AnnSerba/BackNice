@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    var path = Url.ActionContext.HttpContext.Request.Path.Value;
}
<ul class="navbar-nav  ml-auto">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Hello @UserManager.GetUserName(User)!
            </a>
            <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                <li class="dropdown-item">
                    <a asp-area="Identity" asp-page="/Account/Manage/Index">Manage</a>
                </li>
                <li class="dropdown-item">
                    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="form-inline ml-auto">
                        <button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button>
                    </form>
                </li>
            </ul>

        </li>
    }
    else
    {
        <li class="nav-item @(path.Contains("/Identity/Account/Register")?"active":"")">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">
                Register
                @if (path.Contains("/Identity/Account/Register"))
                {
                    <span class='sr-only'></span>
                }
            </a>
        </li>
        <li class="nav-item @(path.Contains("/Identity/Account/Login")?"active":"")">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">
                Login
                @if (path.Contains("/Identity/Account/Login"))
                {
                    <span class='sr-only'></span>
                }
            </a>
        </li>

    }
</ul>
